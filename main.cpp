/*
* Author:   Cashton Christensen
* Date:     10/25/2018
* Purpose:  To take a number of inputted ascii characters. Translate those characters into token numbers. Display those numbers to the screen.
*/
////////////////////////////////////////////////////////////////////////////////
    //narrowing ascii function
      // takes a simple ascii code inputted and uses it as a subscript for a conversion array
      // takes an ascii array
////////////////////////////////////////////////////////////////////////////////
int asciiToIntHere(int oldAsciiCode, int a[])
{
  int simpleAsciiCode = a[oldAsciiCode];
  return simpleAsciiCode;
}
#include <iostream>
#include <fstream>
int main()
{
  //finite ascii conversion table (53 chars)
  int asciiArray[256] = { //NUL-BS,                TAB,NL,DLE-US
                        36,36,36,36,36,36,36,36,36,  0, 0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,
                  //space,!, ", #, $,%,&, ', (, ), *,+,,,-,., /,0,1,2,3,4,5,6,7,8,9, :, ;, <, =, >, ?, @, A, B,C, D, E, F,
                        0,1,36,36,36,2,3,36,36,36,36,4,5,6,7,36,8,8,8,8,8,8,8,8,8,8,10,11,12,13,14,15,36,16,17,9,18,19,20,
                      // G, H, I,J,K, L, M, N, O, P,Q, R, S, T,U,V, W,X,Y,Z, [, \, ], ^, _, `,
                        21,22,23,9,9,24,25,26,27,28,9,29,30,31,9,9,32,9,9,9,36,36,36,33,34,36,
                      //a-z,
                        36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,
                      // {, |, }, ~,DEL,
                        36,35,36,36,36,
                      // ascii 128-255
                        36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36
                        };
  //finite state table
  int finiteStateTable[67][37] = {//ETC,!,%,&,+,,,-, .,      0-9,               , :, ;,<, =,>, ?, A, B, D, E, F, G, H, I, L, M, N, O, P, R, S, T, W, ^, _, |, ELSE
                                  {0,8,65,12,3,17,4,66,/*0-9*/ 1,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,28,54,32,52,54,54,34,54,54,54,54,22,49,54,35,40,21,65,14,65}, //0 - start state
                                  {0,8,65,12,3,17,4,66,/*0-9*/ 1,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,28,54,32,52,54,54,34,54,54,54,54,22,49,54,35,40,21,65,14,65}, //  - Number 0-9  (200)
                                  {0,8,65,12,3,17,4,65,/*0-9*/ 2,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,28,54,32,52,54,54,34,54,54,54,54,22,49,54,35,40,21,65,14,65}, //  - Number 0-9 . Number 0-9 (200)
                                  {0,8,65,12,3,17,4,66,/*0-9*/ 1,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,21,65,14,65}, //  - +   (301)
                                  {0,8,65,12,3,17,4,66,/*0-9*/ 1,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,21,65,14,65}, //  - -   (302)
                                  {0,8,65,12,3,17,4,66,/*0-9*/ 1,/*CJKQUVXYZ*/54,19,16,5,10,6,20,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,21,65,14,65}, //  - <   (303)
                                  {0,8,65,12,3,17,4,66,/*0-9*/ 1,/*CJKQUVXYZ*/54,19,16,5,11,6,20,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,21,65,14,65}, //  - >   (304)
                                  {0,8,65,12,3,17,4,66,/*0-9*/ 1,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,21,65,14,65}, //  - =   (305)
                                  {0,8,65,12,3,17,4,66,/*0-9*/ 1,/*CJKQUVXYZ*/54,19,16,5, 9,6,20,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,21,65,14,65}, //  - !   (600)
                                  {0,8,65,12,3,17,4,66,/*0-9*/ 1,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,21,65,14,65}, //  - !=  (306)
                                  {0,8,65,12,3,17,4,66,/*0-9*/ 1,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,21,65,14,65}, //10- <=  (307)
                                  {0,8,65,12,3,17,4,66,/*0-9*/ 1,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,21,65,14,65}, //  - >=  (308)
                                  {0,8,65,13,3,17,4,66,/*0-9*/ 1,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,21,65,14,65}, //  - &   (600)
                                  {0,8,65,12,3,17,4,66,/*0-9*/ 1,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,21,65,14,65}, //  - &&  (309)
                                  {0,8,65,12,3,17,4,66,/*0-9*/ 1,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,21,65,15,65}, //  - |   (600)
                                  {0,8,65,12,3,17,4,66,/*0-9*/ 1,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,21,65,14,65}, //  - ||  (310)
                                  {0,8,65,12,3,17,4,66,/*0-9*/ 1,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,28,54,32,52,54,54,34,54,54,54,54,22,49,54,35,40,21,65,14,65}, //  - ;   (401)
                                  {0,8,65,12,3,17,4,66,/*0-9*/ 1,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,21,65,14,65}, //  - ,   (402)
                                  {0,8,65,12,3,17,4,66,/*0-9*/ 1,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,21,65,14,65}, //  - :=  (403)
                                  {0,8,65,12,3,17,4,66,/*0-9*/ 1,/*CJKQUVXYZ*/54,19,16,5,18,6,20,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,21,65,14,65}, //  - :   (404)
                                  {0,8,65,12,3,17,4,66,/*0-9*/ 1,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,21,65,14,65}, //20- ?   (405)
                                  {0,8,65,12,3,17,4,66,/*0-9*/ 1,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,21,65,14,65}, //  - ^   (406)
                                  {0,8,53,53,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,54,54,54,54,54,54,23,54,54,54,21,54,14,65}, //  - P   (100)
                                  {0,8,53,53,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,54,54,54,54,24,54,54,54,54,54,21,54,14,65}, //  - PR  (100)
                                  {0,8,53,53,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,25,54,54,54,54,54,54,54,54,54,54,54,21,54,14,65}, //  - PRO (100)
                                  {0,8,53,53,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,54,54,54,54,54,54,26,54,54,54,21,54,14,65}, //  - PROG  (100)
                                  {0,8,53,53,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,27,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,21,54,14,65}, //  - PROGR (100)
                                  {0,8,53,53,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,54,54,55,54,54,54,54,54,54,54,21,54,14,65}, //  - PROGRA  (100)
                                  {0,8,53,53,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,29,54,54,54,54,54,54,54,54,54,54,54,54,54,21,54,14,65}, //  - B (100)
                                  {0,8,53,53,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,30,54,54,54,54,54,54,54,54,54,54,54,21,54,14,65}, //  - BE  (100)
                                  {0,8,53,53,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,31,54,54,54,54,54,54,54,54,54,21,54,14,65}, //30- BEG (100)
                                  {0,8,53,53,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,54,54,54,56,54,54,54,54,54,54,21,54,14,65}, //  - BEGI  (100)
                                  {0,8,53,53,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,54,38,54,33,54,54,54,54,54,54,21,54,14,65}, //  - E (100)
                                  {0,8,53,53,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,57,54,54,54,54,54,54,54,54,54,54,54,54,54,54,21,54,14,65}, //  - EN  (100)
                                  {0,8,53,53,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,58,54,54,54,54,54,44,54,54,54,54,54,54,21,54,14,65}, //  - I (100)
                                  {0,8,53,53,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,36,54,54,54,54,54,54,54,54,54,54,21,54,14,65}, //  - T (100)
                                  {0,8,53,53,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,37,54,54,54,54,54,54,54,54,54,54,54,54,54,21,54,14,65}, //  - TH  (100)
                                  {0,8,53,53,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,54,54,54,59,54,54,54,54,54,54,21,54,14,65}, //  - THE (100)
                                  {0,8,53,53,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,54,54,54,54,54,54,54,39,54,54,21,54,14,65}, //  - EL  (100)
                                  {0,8,53,53,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,60,54,54,54,54,54,54,54,54,54,54,54,54,54,21,54,14,65}, //  - ELS (100)
                                  {0,8,53,53,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,41,54,54,54,54,54,54,54,54,54,54,21,54,14,65}, //40- W (100)
                                  {0,8,53,53,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,42,54,54,54,54,54,54,54,54,54,21,54,14,65}, //  - WH  (100)
                                  {0,8,53,53,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,54,43,54,54,54,54,54,54,54,54,21,54,14,65}, //  - WHI (100)
                                  {0,8,53,53,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,61,54,54,54,54,54,54,54,54,54,54,54,54,54,21,54,14,65}, //  - WHIL  (100)
                                  {0,8,53,53,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,45,54,21,54,14,65}, //  - IN  (100)
                                  {0,8,53,53,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,46,54,54,54,54,54,54,54,54,54,54,54,54,54,21,54,14,65}, //  - INT (100)
                                  {0,8,53,53,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,47,54,54,54,54,54,54,54,54,54,54,54,21,54,14,65}, //  - INTE  (100)
                                  {0,8,53,53,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,48,54,54,54,54,54,54,54,54,54,54,54,54,54,21,54,14,65}, //  - INTEG (100)
                                  {0,8,53,53,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,54,54,54,54,54,54,62,54,54,54,21,54,14,65}, //  - INTEGE  (100)
                                  {0,8,53,53,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,50,54,54,54,54,54,54,54,54,54,54,54,54,54,21,54,14,65}, //  - R (100)
                                  {0,8,53,53,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,51,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,21,54,14,65}, //50- RE  (100)
                                  {0,8,53,53,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,54,63,54,54,54,54,54,54,54,54,21,54,14,65}, //  - REA (100)
                                  {0,8,53,53,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,54,54,54,54,53,54,54,54,54,54,21,54,14,65}, //  - F (100)
                                  {0,8,53,53,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,54,54,54,54,54,54,64,54,54,54,21,54,14,65}, //  - FO  (100)
                                  {0,8,53,33,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,21,54,14,65}, //  - VARIABLE  (100)
                                  {0,8,65,12,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,21,54,14,65}, //  - PROGRAM (501)
                                  {0,8,65,12,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,21,54,14,65}, //  - BEGIN (502)
                                  {0,8,65,12,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,21,54,14,65}, //  - END (503)
                                  {0,8,65,12,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,21,54,14,65}, //  - IF  (504)
                                  {0,8,65,12,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,21,54,14,65}, //  - THEN  (505)
                                  {0,8,65,12,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,21,54,14,65}, //60- ELSE  (506)
                                  {0,8,65,12,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,21,54,14,65}, //  - WHILE (507)
                                  {0,8,65,12,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,21,54,14,65}, //  - INTEGER (508)
                                  {0,8,65,12,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,21,54,14,65}, //  - REAL  (509)
                                  {0,8,65,12,3,17,4,65,/*0-9*/54,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,21,54,14,65}, //  - FOR (510)
                                  {0,8,65,12,3,17,4,65,/*0-9*/ 1,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,21,65,14,65}, //  - NOT IN THE LANGUAGE (600)
                                  {0,8,65,12,3,17,4,66,/*0-9*/ 2,/*CJKQUVXYZ*/54,19,16,5, 7,6,20,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,21,65,14,65} //66- .
                                  };
  //finite action table
  int finiteActionTable[67][37] = {//ETC,!,  %,  &,  +,  ,,  -,  .,       0-9,                ,  :,  ;,  <,  =,  >,  ?,  A,  B,  D,  E,  F,  G,  H,  I,  L,  M,  N,  O,  P,  R,  S,  T,  W,  ^,  _,  |,ELSE
                                  { -1, -1, -1, -1, -1, -1, -1, -1,/*0-9*/ -1,/*CJKQUVXYZ*/ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, //0 - start state
                                  {200,200,200,200,200,200,200, -1,/*0-9*/ -1,/*CJKQUVXYZ*/200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200}, //  - Number 0-9  (200)
                                  {200,200,200,200,200,200,200, -1,/*0-9*/ -1,/*CJKQUVXYZ*/200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200}, //  - Number 0-9 . Number 0-9 (200)
                                  {301,301,301,301,301,301,301,301,/*0-9*/301,/*CJKQUVXYZ*/301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301}, //  - +   (301)
                                  {302,302,302,302,302,302,302,302,/*0-9*/302,/*CJKQUVXYZ*/302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302}, //  - -   (302)
                                  {303,303,303,303,303,303,303,303,/*0-9*/303,/*CJKQUVXYZ*/303,303,303,303, -1,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303}, //  - <   (303)
                                  {304,304,304,304,304,304,304,304,/*0-9*/304,/*CJKQUVXYZ*/304,304,304,304, -1,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304}, //  - >   (304)
                                  {305,305,305,305,305,305,305,305,/*0-9*/305,/*CJKQUVXYZ*/305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305}, //  - =   (305)
                                  {600,600,600,600,600,600,600,600,/*0-9*/600,/*CJKQUVXYZ*/600,600,600,600, -1,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600}, //  - !   (600)
                                  {306,306,306,306,306,306,306,306,/*0-9*/306,/*CJKQUVXYZ*/306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306}, //  - !=  (306)
                                  {307,307,307,307,307,307,307,307,/*0-9*/307,/*CJKQUVXYZ*/307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307}, //10- <=  (307)
                                  {308,308,308,308,308,308,308,308,/*0-9*/308,/*CJKQUVXYZ*/308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308}, //  - >=  (308)
                                  {600,600,600, -1,600,600,600,600,/*0-9*/600,/*CJKQUVXYZ*/600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600}, //  - &   (600)
                                  {309,309,309,309,309,309,309,309,/*0-9*/309,/*CJKQUVXYZ*/309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309}, //  - &&  (309)
                                  {600,600,600,600,600,600,600,600,/*0-9*/600,/*CJKQUVXYZ*/600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600, -1,600}, //  - |   (600)
                                  {310,310,310,310,310,310,310,310,/*0-9*/310,/*CJKQUVXYZ*/310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310}, //  - ||  (310)
                                  {401,401,401,401,401,401,401,401,/*0-9*/401,/*CJKQUVXYZ*/401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401}, //  - ;   (401)
                                  {402,402,402,402,402,402,402,402,/*0-9*/402,/*CJKQUVXYZ*/402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402}, //  - ,   (402)
                                  {403,403,403,403,403,403,403,403,/*0-9*/403,/*CJKQUVXYZ*/403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403}, //  - :=  (403)
                                  {404,404,404,404,404,404,404,404,/*0-9*/404,/*CJKQUVXYZ*/404,404,404,404, -1,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404}, //  - :   (404)
                                  {405,405,405,405,405,405,405,405,/*0-9*/405,/*CJKQUVXYZ*/405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405}, //20- ?   (405)
                                  {406,406,406,406,406,406,406,406,/*0-9*/406,/*CJKQUVXYZ*/406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406}, //  - ^   (406)
                                  {100,100, -1, -1,100,100,100,100,/*0-9*/ -1,/*CJKQUVXYZ*/ -1,100,100,100,100,100,100, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,100, -1,100,100}, //  - P   (100)
                                  {100,100, -1, -1,100,100,100,100,/*0-9*/ -1,/*CJKQUVXYZ*/ -1,100,100,100,100,100,100, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,100, -1,100,100}, //  - PR  (100)
                                  {100,100, -1, -1,100,100,100,100,/*0-9*/ -1,/*CJKQUVXYZ*/ -1,100,100,100,100,100,100, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,100, -1,100,100}, //  - PRO (100)
                                  {100,100, -1, -1,100,100,100,100,/*0-9*/ -1,/*CJKQUVXYZ*/ -1,100,100,100,100,100,100, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,100, -1,100,100}, //  - PROG  (100)
                                  {100,100, -1, -1,100,100,100,100,/*0-9*/ -1,/*CJKQUVXYZ*/ -1,100,100,100,100,100,100, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,100, -1,100,100}, //  - PROGR (100)
                                  {100,100, -1, -1,100,100,100,100,/*0-9*/ -1,/*CJKQUVXYZ*/ -1,100,100,100,100,100,100, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,100, -1,100,100}, //  - PROGRA  (100)
                                  {100,100, -1, -1,100,100,100,100,/*0-9*/ -1,/*CJKQUVXYZ*/ -1,100,100,100,100,100,100, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,100, -1,100,100}, //  - B (100)
                                  {100,100, -1, -1,100,100,100,100,/*0-9*/ -1,/*CJKQUVXYZ*/ -1,100,100,100,100,100,100, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,100, -1,100,100}, //  - BE  (100)
                                  {100,100, -1, -1,100,100,100,100,/*0-9*/ -1,/*CJKQUVXYZ*/ -1,100,100,100,100,100,100, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,100, -1,100,100}, //30- BEG (100)
                                  {100,100, -1, -1,100,100,100,100,/*0-9*/ -1,/*CJKQUVXYZ*/ -1,100,100,100,100,100,100, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,100, -1,100,100}, //  - BEGI  (100)
                                  {100,100, -1, -1,100,100,100,100,/*0-9*/ -1,/*CJKQUVXYZ*/ -1,100,100,100,100,100,100, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,100, -1,100,100}, //  - E (100)
                                  {100,100, -1, -1,100,100,100,100,/*0-9*/ -1,/*CJKQUVXYZ*/ -1,100,100,100,100,100,100, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,100, -1,100,100}, //  - EN  (100)
                                  {100,100, -1, -1,100,100,100,100,/*0-9*/ -1,/*CJKQUVXYZ*/ -1,100,100,100,100,100,100, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,100, -1,100,100}, //  - I (100)
                                  {100,100, -1, -1,100,100,100,100,/*0-9*/ -1,/*CJKQUVXYZ*/ -1,100,100,100,100,100,100, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,100, -1,100,100}, //  - T (100)
                                  {100,100, -1, -1,100,100,100,100,/*0-9*/ -1,/*CJKQUVXYZ*/ -1,100,100,100,100,100,100, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,100, -1,100,100}, //  - TH  (100)
                                  {100,100, -1, -1,100,100,100,100,/*0-9*/ -1,/*CJKQUVXYZ*/ -1,100,100,100,100,100,100, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,100, -1,100,100}, //  - THE (100)
                                  {100,100, -1, -1,100,100,100,100,/*0-9*/ -1,/*CJKQUVXYZ*/ -1,100,100,100,100,100,100, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,100, -1,100,100}, //  - EL  (100)
                                  {100,100, -1, -1,100,100,100,100,/*0-9*/ -1,/*CJKQUVXYZ*/ -1,100,100,100,100,100,100, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,100, -1,100,100}, //  - ELS (100)
                                  {100,100, -1, -1,100,100,100,100,/*0-9*/ -1,/*CJKQUVXYZ*/ -1,100,100,100,100,100,100, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,100, -1,100,100}, //40- W (100)
                                  {100,100, -1, -1,100,100,100,100,/*0-9*/ -1,/*CJKQUVXYZ*/ -1,100,100,100,100,100,100, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,100, -1,100,100}, //  - WH  (100)
                                  {100,100, -1, -1,100,100,100,100,/*0-9*/ -1,/*CJKQUVXYZ*/ -1,100,100,100,100,100,100, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,100, -1,100,100}, //  - WHI (100)
                                  {100,100, -1, -1,100,100,100,100,/*0-9*/ -1,/*CJKQUVXYZ*/ -1,100,100,100,100,100,100, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,100, -1,100,100}, //  - WHIL  (100)
                                  {100,100, -1, -1,100,100,100,100,/*0-9*/ -1,/*CJKQUVXYZ*/ -1,100,100,100,100,100,100, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,100, -1,100,100}, //  - IN  (100)
                                  {100,100, -1, -1,100,100,100,100,/*0-9*/ -1,/*CJKQUVXYZ*/ -1,100,100,100,100,100,100, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,100, -1,100,100}, //  - INT (100)
                                  {100,100, -1, -1,100,100,100,100,/*0-9*/ -1,/*CJKQUVXYZ*/ -1,100,100,100,100,100,100, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,100, -1,100,100}, //  - INTE  (100)
                                  {100,100, -1, -1,100,100,100,100,/*0-9*/ -1,/*CJKQUVXYZ*/ -1,100,100,100,100,100,100, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,100, -1,100,100}, //  - INTEG (100)
                                  {100,100, -1, -1,100,100,100,100,/*0-9*/ -1,/*CJKQUVXYZ*/ -1,100,100,100,100,100,100, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,100, -1,100,100}, //  - INTEGE  (100)
                                  {100,100, -1, -1,100,100,100,100,/*0-9*/ -1,/*CJKQUVXYZ*/ -1,100,100,100,100,100,100, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,100, -1,100,100}, //  - R (100)
                                  {100,100, -1, -1,100,100,100,100,/*0-9*/ -1,/*CJKQUVXYZ*/ -1,100,100,100,100,100,100, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,100, -1,100,100}, //50- RE  (100)
                                  {100,100, -1, -1,100,100,100,100,/*0-9*/ -1,/*CJKQUVXYZ*/ -1,100,100,100,100,100,100, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,100, -1,100,100}, //  - REA (100)
                                  {100,100, -1, -1,100,100,100,100,/*0-9*/ -1,/*CJKQUVXYZ*/ -1,100,100,100,100,100,100, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,100, -1,100,100}, //  - F (100)
                                  {100,100, -1, -1,100,100,100,100,/*0-9*/ -1,/*CJKQUVXYZ*/ -1,100,100,100,100,100,100, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,100, -1,100,100}, //  - FO  (100)
                                  {100,100, -1, -1,100,100,100,100,/*0-9*/ -1,/*CJKQUVXYZ*/ -1,100,100,100,100,100,100, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,100, -1,100,100}, //  - VARIABLE  (100)
                                  {501,501,501,501,501,501,501,501,/*0-9*/501,/*CJKQUVXYZ*/501,501,501,501,501,501,501, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,501, -1,501,501}, //  - PROGRAM (501)
                                  {502,502,502,502,502,502,502,502,/*0-9*/502,/*CJKQUVXYZ*/502,502,502,502,502,502,502, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,502, -1,502,502}, //  - BEGIN (502)
                                  {503,503,503,503,503,503,503,503,/*0-9*/503,/*CJKQUVXYZ*/503,503,503,503,503,503,503, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,503, -1,503,503}, //  - END (503)
                                  {504,504,504,504,504,504,504,504,/*0-9*/504,/*CJKQUVXYZ*/504,504,504,504,504,504,504, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,504, -1,504,504}, //  - IF  (504)
                                  {505,505,505,505,505,505,505,505,/*0-9*/505,/*CJKQUVXYZ*/505,505,505,505,505,505,505, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,505, -1,505,505}, //  - THEN  (505)
                                  {506,506,506,506,506,506,506,506,/*0-9*/506,/*CJKQUVXYZ*/506,506,506,506,506,506,506, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,506, -1,506,506}, //60- ELSE  (506)
                                  {507,507,507,507,507,507,507,507,/*0-9*/507,/*CJKQUVXYZ*/507,507,507,507,507,507,507, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,507, -1,507,507}, //  - WHILE (507)
                                  {508,508,508,508,508,508,508,508,/*0-9*/508,/*CJKQUVXYZ*/508,508,508,508,508,508,508, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,508, -1,508,508}, //  - INTEGER (508)
                                  {509,509,509,509,509,509,509,509,/*0-9*/509,/*CJKQUVXYZ*/509,509,509,509,509,509,509, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,509, -1,509,509}, //  - REAL  (509)
                                  {510,510,510,510,510,510,510,510,/*0-9*/510,/*CJKQUVXYZ*/510,510,510,510,510,510,510, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,510, -1,510,510}, //  - FOR (510)
                                  {600,600,600,600,600,600,600,600,/*0-9*/600,/*CJKQUVXYZ*/600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600}, //  - NOT IN THE LANGUAGE (600)
                                  {600,600,600,600,600,600,600,600,/*0-9*/ -1,/*CJKQUVXYZ*/600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600} //66- .
                                  }; //
  int currentState = 0, nextState;
////////////////////////////////////////////////////////////////////////////////
  //prompt user inupt of file
////////////////////////////////////////////////////////////////////////////////
  char userInput[1024], outputChar[1024];
  int outputCount = 0, outputCount2;
  std::cout << "Enter your file name and press enter\n\t";
  std::cin.getline(userInput, 1024, '\n');
  std::ifstream myfile (userInput);
////////////////////////////////////////////////////////////////////////////////
  //work through file character-by-character
  //change states depending on the character
    //white spaces mean to return the code for that character/string and return to the start state for another character/string
////////////////////////////////////////////////////////////////////////////////
  char characterCursor;
  int oldAsciiCode, newAsciiCode, outputTag;
  if(myfile.is_open())
  {
    while (myfile.get(characterCursor))
    {
      oldAsciiCode = static_cast<int>(characterCursor);
      newAsciiCode = asciiToIntHere(oldAsciiCode, asciiArray);

      nextState = finiteStateTable[currentState][newAsciiCode];
      outputTag = finiteActionTable[currentState][newAsciiCode];

      switch (outputTag) {
        case -1:
        if(newAsciiCode != 0) std::cout << characterCursor;
          break;
        default:
        std::cout << "\t" << outputTag << "\n";
        if(newAsciiCode != 0) std::cout << characterCursor;
          break;
      }
      currentState = nextState;
    }
    myfile.close();
  }
  else std::cout << "Unable to open file\n";
  return 0;
}
